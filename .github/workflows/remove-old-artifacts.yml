
#============================================================
# Copyright (c) 2019-2021 iplcdn <https://nomcai.ml>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/joecaicai/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# File: .github/workflows/update-checker.yml
# Description: Source code update checker
#============================================================

name: Remove old artifacts
env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  
on:
  workflow_dispatch:
  schedule:
    - cron: 0 */18 * * fri
  #  每天晚上 22 点自动编译。
  #  watch:
  #    types: started
  #  - cron: 0 8 */5 * *
  #  - cron: 0 22,14 * * *
  #  每天运行两次，在上午 6 点和晚上 22 点。
  #  - cron: 0 20 * * fri
  #  每周五凌晨四点自动编译。
jobs:
  remove-old-artifacts:
    runs-on: ubuntu-latest
    timeout-minutes: 3600

    steps:
    #- name: Remove old artifacts
    #  uses: c-hive/gha-remove-artifacts@v1
    #  with:
    #     age: '1 month'
         #Optional inputs
         #skip-tags: true
         #skip-recent: 5
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH .
        echo "::set-output name=commitHash::$(git rev-parse HEAD)"

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash
        key: HEAD-${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash

    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: Source Code Update

    - name: Apply
      run: |
        Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
        git add .
        git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        for pkg in $(git diff-tree --no-commit-id --name-only HEAD); do
          if [ "$(grep "PKG_RELEASE" $pkg/Makefile)" ]; then
            sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=$(git rev-list --count master $pkg)/" $pkg/Makefile || true
          fi
        done
        git reset --soft HEAD^
        git add .
        git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
        git push -f

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 16
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
